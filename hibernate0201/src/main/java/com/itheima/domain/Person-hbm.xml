<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="com.itheima.domain">
	<class name="Person" table="PERSON">
		<!-- 定义对应的主键：定义对象的OID。 -->
		<!-- 
			access="property" 说明name="id"对应的是Person类中的getId/setId属性。
			access="field" 说明name="id"对应的是Per送类中的 private Integer id。
		 -->
		<id name="id" column="ID" access="property">
			<!-- 主键生成策略。主键是如何生成的 -->
			<!-- 
			常见主键生成策略：此处我们使用一个字符串来表式。实际上在Hibernate中，该字符串代表着一个主键生成策略的类
			
			increment：适用于代理主键。由Hibernate框架给你生成一个id。适合所有的数据库系统。多线程环境下不适合。
			identity:适用于代理主键。由底层数据库自动增长维护主键。不适合oracle数据库。多线程环境下适合。
			sequence:适用于代理主键。由底层数据库使用序列器维持id。不适合有自动增长的数据库。适合oracle
			native:适用于代理主键。由底层数据库按能力来生成主键，如果是MySQL，id自动增长，如果是oracle，id从序列中取。（推荐）
			uuid：适用于代理主键。主键是一个UUID。必须是字符串类型
			 -->
			<generator class="native"></generator>
		</id>
		<!-- type="string" Hibenate中的类型 -->
		<property name="name" column="NAME" length="20" type="string"></property>
		<property name="birthday" column="BIRTHDAY"></property>
		<property name="gender" column="GENDER"></property>
	</class>
</hibernate-mapping>